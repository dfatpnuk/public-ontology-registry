[tool.poetry]
authors = [
  "Thanh Lam <thanh@bast.ai>"
]

maintainers = [
  "Thanh Lam <thanh@bast.ai>"
]

description = "Bast AI public ontology registry"
license = "MIT"
name = "bast-ontology-registry"
readme = "README.md"
version = "0.1.0"

keywords = ["data", "dvc", "ai", "models"]
repository = "https://github.com/bast-ai/public-ontology-registry"

classifiers = [
  "Development Status :: 4 - Beta",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

packages = [
    { include = "pipelines" }
]

[[tool.poetry.source]]
name = "bast-ai"
priority = "supplemental"
url = "http://repos.bast.ai:8080/"

[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.poetry.dependencies]
## Python
python = "^3.10"

## BAST AI
bast-ai-base = "0.5.2"
# bast-ai-config = "0.5.2"
bast-ai-dvc = "0.5.0"
bast-initialize-pipeline = "0.1.0"
bast-openai-pipeline = "0.1.0"
bast-milvus-pipeline = "0.1.0"
bast-ai-build-owl = "0.1.2"
bast-ai-parse-owl = "0.1.1"
bast-ai-segmenter = "0.1.0"
bast-ai-spacy-token-parser = "0.1.1"
bast-ai-tokenizer = "0.1.1"

## Open sources
dvc-s3 = "3.2.0"
en-core-web-sm = {path="resources/lib/en_core_web_sm-3.7.0.tar.gz"}

## Jupyter
ipykernel = "^6.21.2"
jupyter = "^1.0.0"
notebook = "^6.4.10"
jupyterlab = "^3.0"

## DEV dependencies
[tool.poetry.dev-dependencies]
autopep8 = "^2.0.2"
pdoc3 = "^0.10.0"
plac = "^1.3.5"
pre-commit = "^2.17.0"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"

## PyTest
[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
  --disable-pytest-warnings
  --cov=pipelines
  --capture=tee-sys
  --cov-report term-missing --cov-report html """
testpaths = [
    "tests",
    "integration",
]

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]

[tool.black]
exclude = '''
/(
	\.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| _build
| buck-out
| build
)/
'''
include = '\.pyi?$'
line-length = 79

[tool.flakeheaven]
# optionally inherit from remote config (or local if you want)
base = "https://raw.githubusercontent.com/flakeheaven/flakeheaven/main/pyproject.toml"
# specify any flake8 options. For example, exclude "example.py":
exclude = ["example.py"]
# make output nice
format = "grouped"
# 80 chars aren't enough in 21 century
max_line_length = 90
# show line of source code in output
show_source = true

# list of plugins and rules for them
[tool.flakeheaven.plugins]
# include everything in pyflakes except F401
pyflakes = ["+*", "-F401"]
# enable only codes from S100 to S199
flake8-bandit = ["-*", "+S1??"]
# enable everything that starts from `flake8-`
"flake8-*" = ["+*"]
# explicitly disable plugin
flake8-docstrings = ["-*"]
